

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB62qZpLPkJOx3s-1qQqq4iUrH1p6Gx5Ow">
</script>

<script type="text/javascript">
var map;
var Busroute;

function initialize()
	{		
		var mapOptions = {center: { lat: 40.442808, lng: -79.943013 },zoom: 15};
		map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

	/*google.maps.event.addDomListener(window, 'load', initialize);
 	$(document).on('pageshow', '#map-container', initialize());*/

			var BusCoordinates = 
			[
			    new google.maps.LatLng(40.441836, -79.946941),
				new google.maps.LatLng(40.442309, -79.947091),
				new google.maps.LatLng(40.442848, -79.946748),
				new google.maps.LatLng(40.444465, -79.946533),
				new google.maps.LatLng(40.444661, -79.942971),
				new google.maps.LatLng(40.443991, -79.939173),
				new google.maps.LatLng(40.443240, -79.938015),
				new google.maps.LatLng(40.442685, -79.937800),
				new google.maps.LatLng(40.441917, -79.939560),
				new google.maps.LatLng(40.441738, -79.941319),
				new google.maps.LatLng(40.440823, -79.942006),
				new google.maps.LatLng(40.440464, -79.942092),
				new google.maps.LatLng(40.441542, -79.946984),
				new google.maps.LatLng(40.441836, -79.946941)
			];
			

			Busroute = new google.maps.Polyline
			({
			    path: BusCoordinates,
			    geodesic: true,
			    strokeColor: '#0000FF',
			    strokeOpacity: 1.0,
			    strokeWeight: 3
			});		
			
	}

			

function boundary_on_click(path,obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
    path.setMap(map);
	}
	else{
    //alert("Not checked");
    path.setMap(null);
	 //when not checked
  }
}

var ars = [];
var burg = [];
var ct = [];
var ie = [];
var rob = [];
var sa = [];
var the = [];
var mis = [];

<% def convert_to_google_markers(att,ary,color) %>
  <% att.each do |atr|%>
   //alert(codeAddress('<%=atr.Location%>'));
$.getJSON('https://maps.googleapis.com/maps/api/geocode/json?address=' + '<%=atr.Location%>' + 'Pittsburgh, + PA&key=AIzaSyB62qZpLPkJOx3s-1qQqq4iUrH1p6Gx5Ow&callback', function(json) 
{
  var mar = new google.maps.Marker({ 
    position: new google.maps.LatLng(json.results[0].geometry.location.lat,json.results[0].geometry.location.lng),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker'+'<%=color%>'+'.png',
    title:'<%= atr.Category %>'
  });
  <%=ary%>.push(mar);
});
  <% end %>
<% end %>

<% ars_markers = [] %>
<% burg_markers = [] %>
<% ct_markers = [] %>
<% ie_markers = [] %>
<% rob_markers = [] %>
<% sa_markers = [] %>
<% the_markers = [] %>
<% mis_markers = [] %>

<% @hello.each_with_index do |cr,index|%>
    <% case cr.Category %>
      <% when "Arson"%>
        <% ars_markers << cr %>
        <% ars = convert_to_google_markers(ars_markers,'ars','') %>    
      <% when "Burglary" %>
        <% burg_markers << cr %>
        <% convert_to_google_markers(burg_markers,'burg','_yellow') %>
      <% when "Criminal Trespass" %>
        <% ct_markers << cr %>
        <% convert_to_google_markers(ct_markers,'ct','_purple') %>
      <% when "Indecent Exposure" %>
        <% ie_markers << cr %>
        <% convert_to_google_markers(ie_markers,'ie','_black') %>
      <% when "Robbery" %>
        <% rob_markers << cr %>
        <% convert_to_google_markers(rob_markers,'rob','_grey') %>
      <% when "Sexual Assault" %>
        <% sa_markers << cr %>
        <% convert_to_google_markers(sa_markers,'sa','_white') %>
      <% when "Theft" %>
        <% the_markers << cr %>
        <% convert_to_google_markers(the_markers,'the','_orange') %>
      <% when "Miscellaneous" %>
        <% mis_markers << cr %>
        <% convert_to_google_markers(mis_markers,'mis','_green') %>
    <% end %>
<% end %>



//all crimes
//crime.category = 'x'
//create marker with all attributes 
// add marker to array x

/*var ars_marker = new google.maps.Marker({
    			position: new google.maps.LatLng(40.441323, -79.939076),
    			map: map,
			    title: 'Stay alert to your surroundings at all times.Stay close to friends and do not interact with strangers. Do not approach suspicious persons or vehicles. Report any suspicious incidents, persons or vehicles to CMU Police at 412-268-2323,or off campus to the Pittsburgh Police at 911.',		    
			  	});

var burg_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.445819, -79.948851),
    map: map,
    icon: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png',
    title: 'Stay alert to your surroundings at all times.Stay close to friends and do not interact with strangers. Do not approach suspicious persons or vehicles. Report any suspicious incidents, persons or vehicles to CMU Police at 412-268-2323,or off campus to the Pittsburgh Police at 911.'
  });

 var ct_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.446914, -79.940922),
    map: map,
    icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
    title:'Stay alert to your surroundings at all times.Stay close to friends and do not interact with strangers. Do not approach suspicious persons or vehicles. Report any suspicious incidents, persons or vehicles to CMU Police at 412-268-2323,or off campus to the Pittsburgh Police at 911.' 
  });


 var ie_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.447440, -79.942454),
    map: map,
    icon : 'http://maps.google.com/mapfiles/marker_black.png',
    title: 'Stay alert to your surroundings at all times.Stay close to friends and do not interact with strangers. Do not approach suspicious persons or vehicles. Report any suspicious incidents, persons or vehicles to CMU Police at 412-268-2323,or off campus to the Pittsburgh Police at 911.'
  });

 var r_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.446913, -79.942711),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_grey.png',
    title: 'Roberry'
  });
 var r_marker1 = new google.maps.Marker({
    position: new google.maps.LatLng(40.447813, -79.937147),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_grey.png',
    title: 'Roberry'
  });
var r_marker2 = new google.maps.Marker({
    position: new google.maps.LatLng(40.432355, -79.923140),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_grey.png',
    title: 'Roberry'
  });
var r_marker3 = new google.maps.Marker({
    position: new google.maps.LatLng(40.446931,-79.949017),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_grey.png',
    title: 'Roberry'
  });
var r_marker4 = new google.maps.Marker({
    position: new google.maps.LatLng( 40.440371,-79.959841),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_grey.png',
    title: 'Roberry'
  });


 var sa_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.447064, -79.947274),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_white.png',
    title: 'Sexual_Assault'
  });

 var t_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.444165,-79.943373),
    map: map,
    icon: 'http://maps.google.com/mapfiles/marker_orange.png',
    title: 'Theft'
  });

 var o_marker = new google.maps.Marker({
    position: new google.maps.LatLng(40.442832, -79.943047),
    map: map,
    title: 'Other'
  });
*/


function Arson(obj) {
  if($(obj).is(":checked")){
    //alert(assault_marker.getVisible());
    for (var i = 0; i < ars.length; i++) {
      ars[i].setMap(map);
      ars[i].setVisible(true);
    }
    //ars_marker.setMap(map);
      //ars_marker.setVisible(true);
	}
	else{
    //alert(assault_marker.getVisible());
	 //when not checked
   for (var i = 0; i < ars.length; i++) {
    ars[i].setMap(null);
    ars[i].setVisible(false);
  }
  //ars_marker.setMap(null);
    //ars_marker.setVisible(false);
   
}
}


function Burglary(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
    
    for (var i = 0; i < burg.length; i++) {
      burg[i].setMap(map);
      burg[i].setVisible(true);
    }
    //burg_marker.setMap(map);
    //burg_marker.setVisible(true);
	}
	else{
    //alert("Not checked");
     for (var i = 0; i < burg.length; i++) {
    burg[i].setMap(null);
    burg[i].setVisible(false);
  }
  //burg_marker.setMap(null);
  //burg_marker.setVisible(false);
	 //when not checked
  }
}

function Criminal_Tresspass(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
    for (var i = 0; i < ct.length; i++) {
      ct[i].setMap(map);
      ct[i].setVisible(true);
    }
   //ct_marker.setMap(map);
  	//ct_marker.setVisible(true);
	}
	else{
    //alert("Not checked");
    for (var i = 0; i < ct.length; i++) {
    ct[i].setMap(null);
    ct[i].setVisible(false);
  }
	 //when not checked
  }
}

function Indecent_Exposure(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
   // ie_marker.setMap(map);
    //ie_marker.setVisible(true);
	for (var i = 0; i < ie.length; i++) {
      ie[i].setMap(map);
      ie[i].setVisible(true);
    }
  }
	else{
    //alert("Not checked");
   for (var i = 0; i < ie.length; i++) {
    ie[i].setMap(null);
    ie[i].setVisible(false);
  }
   /*ie_marker.setVisible(false);
    ie_marker.setMap(null);
	 *///when not checked
  }
}

function Roberry(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
  for (var i = 0; i < rob.length; i++) {
      rob[i].setMap(map);
      rob[i].setVisible(true);
    }
  /*  r_marker.setMap(map);
    r_marker.setVisible(true);
    r_marker1.setMap(map);
    r_marker1.setVisible(true);
    r_marker2.setMap(map);
    r_marker2.setVisible(true);
    r_marker3.setMap(map);
    r_marker3.setVisible(true);
    r_marker4.setMap(map);
    r_marker4.setVisible(true);*/
	}
	else{
    //alert("Not checked");
    for (var i = 0; i < rob.length; i++) {
    rob[i].setMap(null);
    rob[i].setVisible(false);
  }
    /*r_marker.setVisible(false);
    r_marker.setMap(null);

    r_marker1.setVisible(false);
    r_marker1.setMap(null);

    r_marker2.setVisible(false);
    r_marker2.setMap(null);

    r_marker3.setVisible(false);
    r_marker3.setMap(null);

    r_marker4.setVisible(false);
    r_marker4.setMap(null);*/
	 //when not checked
  }
}

function Sexual_Assault(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
    for (var i = 0; i < sa.length; i++) {
      sa[i].setMap(map);
      sa[i].setVisible(true);
    }
    /*sa_marker.setMap(map);
    sa_marker.setVisible(true);*/
	}
	else{
    //alert("Not checked");
    for (var i = 0; i < sa.length; i++) {
    sa[i].setMap(null);
    sa[i].setVisible(false);
  }
    /*sa_marker.setVisible(false);
    sa_marker.setMap(null);*/
	 //when not checked
  }
}

function Theft(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
  for (var i = 0; i < the.length; i++) {
      the[i].setMap(map);
      the[i].setVisible(true);
    }
  //  t_marker.setVisible(true);
  //  t_marker.setMap(map);
	}
	else{
    //alert("Not checked");
    for (var i = 0; i < the.length; i++) {
    the[i].setMap(null);
    the[i].setVisible(false);
  }
    /*t_marker.setVisible(false);
    t_marker.setMap(null);*/
	 //when not checked
  }
}

function Other(obj) {
  if($(obj).is(":checked")){
    //alert("Yes checked");
    for (var i = 0; i < mis.length; i++) {
      mis[i].setMap(map);
      mis[i].setVisible(true);
    }
    	}
	else{
    //alert("Not checked");
  for (var i = 0; i < mis.length; i++) {
    mis[i].setMap(null);
    mis[i].setVisible(false);
  }
	 //when not checked
  }
}

</script>

<%= render "pages/sidebar" %>
<div id="map-canvas"></div>


<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', initialize);
 	$(document).on('pageshow', '#map-container', initialize());
// Define the LatLng coordinates for the outer path.
</script>



